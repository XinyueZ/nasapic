def buildNumber = 'bld' + (System.env.BUILD_NUMBER ?: 'SNAPSHOT')
apply plugin: 'com.android.application'
apply plugin: 'android-apt'


android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    dataBinding {
        enabled = true
    }
    defaultConfig {
        multiDexEnabled = true
        applicationId project.APP_APPLICATIONID
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.APP_VERSIONCODE)
        versionName project.APP_VERSIONNAME

        vectorDrawables.useSupportLibrary = true
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "3g"
    }




    buildTypes {
        debug {
            versionNameSuffix buildNumber
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            applicationId project.APP_DEV_APPLICATIONID
            minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
            targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
            versionCode Integer.parseInt(project.APP_VERSIONCODE)
            versionName project.APP_VERSIONNAME
        }
        live {
            applicationId project.APP_APPLICATIONID
            minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
            targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
            versionCode Integer.parseInt(project.APP_VERSIONCODE)
            versionName project.APP_VERSIONNAME
        }
    }



    lintOptions {
        htmlReport false
        abortOnError false
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:design:24.0.0-alpha1'
    compile 'com.android.support:cardview-v7:24.0.0-alpha1'
    compile('com.google.android.gms:play-services:8.4.0') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-v7'
    }
    compile 'com.facebook.stetho:stetho-okhttp:1.0.0'
    compile 'com.github.hotchemi:permissionsdispatcher:1.2.1@aar'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:1.2.1'

    compile project(':volley_cz')
    compile project(':ChoppingBootstrap')
}


// Rename final apks
android.applicationVariants.all {  variant ->
    variant.outputs.each  { output ->
        output.outputFile = new File(
                output.outputFile.parent, output.outputFile.name.replace("_Android", "")
                .replace(".apk", "-${android.defaultConfig.versionName}${buildNumber}.apk"))
    }
}
